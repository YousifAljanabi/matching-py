"""add all_time_access field to access mode

Revision ID: 477daf69d58a
Revises: 95d5a054c01d
Create Date: 2025-09-20 22:06:57.706499

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '477daf69d58a'
down_revision: Union[str, Sequence[str], None] = '95d5a054c01d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('access', sa.Column('all_time_access', sa.Boolean(), nullable=True))
    op.alter_column('access', 'from_hour',
               existing_type=postgresql.TIME(),
               nullable=True)
    op.alter_column('access', 'to_hour',
               existing_type=postgresql.TIME(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('access', 'to_hour',
               existing_type=postgresql.TIME(),
               nullable=False)
    op.alter_column('access', 'from_hour',
               existing_type=postgresql.TIME(),
               nullable=False)
    op.drop_column('access', 'all_time_access')
    # ### end Alembic commands ###
